# Step 1: Import Libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neural_network import MLPClassifier  # Import the MLPClassifier
from sklearn.metrics import classification_report, accuracy_score

print("Libraries uploaded")

#Step 2: Load Dataset
train_data_path=r'C:\\Users\\user\\Desktop\\Train data filtering.xlsx'
test_data_path=r'C:\\Users\\user\\Desktop\\Test data filtering.xlsx'
dftrain = pd.read_excel(train_data_path)
dftest = pd.read_excel(test_data_path)

print("data load")

# Step 3: Preprocess the data if needed
print("No preprocessing needed and scaling before filtering")

# Step 4+5: Split the dataset into features (X) and target variable (y) and define test and train data
X_train = dftrain.drop(columns=['fetal_health'])  # Features
Y_train = dftrain['fetal_health']  # Target variable
X_test = dftest.drop(columns=['fetal_health'])  # Features
Y_test = dftest['fetal_health']  # Target variable
print("Target value + define train and test data")

# Step 6: Apply machine learning algorithm - Neural Network (MLP)
mlp = MLPClassifier(hidden_layer_sizes=(100, 50), max_iter=500)  # Initialize the MLPClassifier
mlp.fit(X_train, Y_train)  # Train the neural network
y_pred = mlp.predict(X_test)  # Make predictions

print("Neural Network (MLP) selected")

# Step 7: Evaluate the model
print("Accuracy:", accuracy_score(Y_test, y_pred))
print("\nClassification Report:\n", classification_report(Y_test, y_pred))

# Fine-tune the model if necessary (hyperparameter tuning)
# You can adjust the parameters of MLPClassifier, such as hidden_layer_sizes and max_iter, for tuning
